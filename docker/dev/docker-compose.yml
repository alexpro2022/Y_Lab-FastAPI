version: '3.8'

services:

  db:
    image: postgres:15.1-alpine
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    env_file:
      - ../../.env

  rabbitmq:
    image: rabbitmq:latest
    env_file:
      - ../../.env
    ports:
      - 5672:5672

  flower:
    image: mher/flower
    ports:
      - 5555:5555
    depends_on:
      - rabbitmq
    env_file:
      - ../../.env

  web:
    build:
      context: ../..
      dockerfile: docker/dev/dev.Dockerfile
    #environment:
    #  - DOCKER_BUILDKIT=1
    command: bash -c "uvicorn app.main:app --reload --host=0.0.0.0"
    # command: bash -c "alembic upgrade head && uvicorn app.main:app --host=0.0.0.0"
    restart: always
    volumes:
      - ../..:/app
    depends_on:
      - db
      - redis
      #db:
      #  condition: service_healthy
      #redis:
      #  condition: service_healthy
    env_file:
      - ../../.env

  celery_worker:
    build:
      context: ../..
      dockerfile: docker/dev/dev.Dockerfile
    #environment:
    #  - DOCKER_BUILDKIT=1
    command: bash -c "celery -A app.celery_tasks.celery_app worker -B --loglevel=info"
    links:
      - rabbitmq
    depends_on:
      - rabbitmq
      - web
    volumes:
      - ../../admin:/app/admin
    env_file:
      - ../../.env

  nginx:
    image: nginx:1.21.3-alpine
    restart: always
    depends_on:
      - web
    ports:
      - 8000:8000
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf


volumes:
  db_data:
